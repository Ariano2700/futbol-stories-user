---
import type { NewsWithAuthorI } from "src/interfaces/news/newsInterface";
import convertCreatedAtToMonthYear from "src/utils/convertCreatedAtToMonthYear";
import formatFirebaseTimestamp from "src/utils/formatFirebaseTimestamp";
import formatName from "src/utils/formatName";
import formatTitleForUrl from "src/utils/formatTitleForUrl";

interface Props {
  note: NewsWithAuthorI;
}

const { note } = Astro.props;
// Encuentra el tag que coincide con el principalTag
const principalTag = note.tags.find((tag) => tag.id === note.principalTag);
const { month, year } = convertCreatedAtToMonthYear(note.createdAt);
---

<article>
  <a
    href={`/notas/${month}/${year}/${formatTitleForUrl(note.title)}/${note.id}`}
    class="relative flex flex-col gap-2 w-[300px] hover:scale-105 transition-all duration-200 ease-in-out"
    aria-label={`Ver más sobre ${note.title}`}
  >
    <!-- Etiqueta de ubicación (Perú o Internacional) -->
    <div class="absolute top-0 left-0 w-full">
      <div class="flex items-center justify-between p-5">
        <span
          class={`${note.isPeruvian ? "bg-red-600" : "bg-blue-600"} text-text montserrat-alternates-semibold rounded-full text-sm py-1 px-4`}
          aria-label={`Nota de ${note.isPeruvian ? "Perú" : "Internacional"}`}
        >
          {note.isPeruvian ? "Perú" : "Int."}
        </span>
        {
          principalTag && (
            <img
              src={principalTag.image}
              alt={`Logo o escudo oficial de ${principalTag.name}`}
              class="size-16 object-contain"
            />
          )
        }
      </div>
    </div>

    <!-- Imagen destacada -->
    <img
      src={note.images.find((img) => img.mainImage)?.url || ""}
      alt={`Imagen destacada de ${note.title}`}
      class="size-[300px] object-cover rounded-sm"
    />

    <!-- Información textual -->
    <div class="flex flex-col gap-1">
      <time class="text-sm text-red-500 max-w-56 montserrat-light">
        {
          note.updatedAt
            ? formatFirebaseTimestamp(note.updatedAt)
            : formatFirebaseTimestamp(note.createdAt)
        }
      </time>
      <p
        class="max-w-[280px] text-xl montserrat-semibold underline decoration-transparent hover:decoration-current transition-all"
      >
        {note.title}
      </p>
      <p class="max-w-[280px] text-xs montserrat-light uppercase">
        Redactor: {formatName(note.author.name, note.author.surname)}
      </p>
    </div>
  </a>
</article>
